00001  0000             *=$C000
00002  C000             
00003  C000             
00004  C000             MAIN
00005  C000  20 00 CE              JSR IRQ_TEST
00006  C003             
00007  C003             
00008  C003             INF_LOOP
00009  C003  4C 03 C0              JMP INF_LOOP
00010  C006             
00011  C006             
00012  C006                        
00013  C006             
00014  C006             *=$CE00
00015  CE00             ; ---------------------------
00016  CE00             ; IRQ TEST
00017  CE00             IRQ_TEST
00018  CE00             
00019  CE00  78                    SEI        ;DISABLE MASKABLE IRQS
00020  CE01             
00021  CE01  A9 7F                 LDA #$7F
00022  CE03  8D 0D DC              STA $DC0D  ;DISABLE TIMER INTERRUPTS WHICH CAN BE GENERATED BY THE TWO CIA CHIPS
00023  CE06  8D 0D DD              STA $DD0D  ;THE KERNAL USES SUCH AN INTERRUPT TO FLASH THE CURSOR AND SCAN THE KEYBOARD, SO WE BETTER
00024  CE09                        ;STOP IT.
00025  CE09             
00026  CE09  AD 0D DC              LDA $DC0D  ;BY READING THIS TWO REGISTERS WE NEGATE ANY PENDING CIA IRQS.
00027  CE0C  AD 0D DD              LDA $DD0D  ;IF WE DON'T DO THIS, A PENDING CIA IRQ MIGHT OCCUR AFTER WE FINISH SETTING UP OUR IRQ.
00028  CE0F                        ;WE DON'T WANT THAT TO HAPPEN.
00029  CE0F             
00030  CE0F  A9 01                 LDA #$01   ;THIS IS HOW TO TELL THE VICII TO GENERATE A RASTER INTERRUPT
00031  CE11  8D 1A D0              STA $D01A
00032  CE14             
00033  CE14  A9 80                 LDA #$80   ;THIS IS HOW TO TELL AT WHICH RASTERLINE WE WANT THE IRQ TO BE TRIGGERED
00034  CE16  8D 12 D0              STA $D012
00035  CE19             
00036  CE19  A9 1B                 LDA #$1B   ;AS THERE ARE MORE THAN 256 RASTERLINES, THE TOPMOST BIT OF $D011 SERVES AS
00037  CE1B  8D 11 D0              STA $D011  ;THE 8TH BIT FOR THE RASTERLINE WE WANT OUR IRQ TO BE TRIGGERED.
00038  CE1E                        ;HERE WE SIMPLY SET UP A CHARACTER SCREEN, LEAVING THE TOPMOST BIT 0.
00039  CE1E             
00040  CE1E                        ;LDA #$37   ;WE TURN OFF THE BASIC HERE
00041  CE1E                        ;STA $01    ;THE CPU NOW SEES RAM EVERYWHERE EXCEPT AT $D000-$E000, WHERE STILL THE REGISTERS OF
00042  CE1E                        ;           ;SID/VICII/ETC ARE VISIBLE
00043  CE1E  A9 35                 LDA #$35   ;WE TURN OFF THE BASIC AND KERNAL ROM HERE
00044  CE20  85 01                 STA $01    ;THE CPU NOW SEES RAM EVERYWHERE EXCEPT AT $D000-$E000, WHERE STILL THE REGISTERS OF
00045  CE22                        ;SID/VICII/ETC ARE VISIBLE
00046  CE22             
00047  CE22  A9 34                 LDA #<IRQ  ;THIS IS HOW WE SET UP
00048  CE24  8D FE FF              STA $FFFE  ;THE ADDRESS OF OUR INTERRUPT CODE
00049  CE27  A9 CE                 LDA #>IRQ
00050  CE29  8D FF FF              STA $FFFF
00051  CE2C             
00052  CE2C  AD 0D DC              LDA $DC0D  ;BY READING THIS TWO REGISTERS WE NEGATE ANY PENDING CIA IRQS.
00053  CE2F  AD 0D DD              LDA $DD0D  ;IF WE DON'T DO THIS, A PENDING CIA IRQ MIGHT OCCUR AFTER WE FINISH SETTING UP OUR IRQ.
00054  CE32                        ;WE DON'T WANT THAT TO HAPPEN.
00055  CE32             
00056  CE32             
00057  CE32  58                    CLI        ;ENABLE MASKABLE INTERRUPTS AGAIN
00058  CE33                        
00059  CE33  60                    RTS
00060  CE34                        
00061  CE34             IRQ
00062  CE34             
00063  CE34             
00064  CE34  48                    PHA        ;STORE REGISTER A IN STACK
00065  CE35  8A                    TXA
00066  CE36  48                    PHA        ;STORE REGISTER X IN STACK
00067  CE37  98                    TYA
00068  CE38  48                    PHA        ;STORE REGISTER Y IN STACK
00069  CE39             
00070  CE39             
00071  CE39  38                    SEC
00072  CE3A  2E 19 D0              ROL $D019
00073  CE3D             
00074  CE3D             
00075  CE3D             
00076  CE3D                        ;LDA #$FF   ;THIS IS THE ORTHODOX AND SAFE WAY OF CLEARING THE INTERRUPT CONDITION OF THE VICII.
00077  CE3D                        ;STA $D019
00078  CE3D             
00079  CE3D                        ;DO STUFF
00080  CE3D                        
00081  CE3D  EE 20 D0              INC $D020   ; TEST OPERATION TO TWEAK SCREEN
00082  CE40             
00083  CE40                        ;JSR SCRL_SEQ_ADDR$
00084  CE40                        ;JSR SCRL_SEQ_ADDR$
00085  CE40                        ;JSR SCRL_UPDATE
00086  CE40             
00087  CE40                        ;THIS IS HOW TO TELL AT WHICH RASTERLINE WE WANT THE IRQ TO BE TRIGGERED
00088  CE40  AD 12 D0              LDA $D012
00089  CE43  18                    CLC
00090  CE44  69 14                 ADC #20
00091  CE46  A9 FF                 LDA #255    ; OVERRIDE TO EXEC IRQ ONCE PER FRAME
00092  CE48  8D 12 D0              STA $D012
00093  CE4B             
00094  CE4B             
00095  CE4B  68                    PLA
00096  CE4C  A8                    TAY        ;RESTORE REGISTER Y FROM STACK (REMEMBER STACK IS FIFO: FIRST IN FIRST OUT)
00097  CE4D  68                    PLA
00098  CE4E  AA                    TAX        ;RESTORE REGISTER X FROM STACK
00099  CE4F  68                    PLA        ;RESTORE REGISTER A FROM STACK
00100  CE50             
00101  CE50  40                    RTI
00102  CE51             

******* 4 Label(s) *******
inf_loop = $C003 
irq = $CE34 
irq_test = $CE00 
main = $C000 

******* 1 Unused label(s) *******
main

******* 1 Variable(s) *******
tgt_c64  = $0001
******* 1 Unused variables(s) *******
tgt_c64


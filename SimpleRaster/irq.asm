*=$ce00
; ---------------------------
; IRQ test
irq_test

        sei        ;disable maskable IRQs

        lda #$7f
        sta $dc0d  ;disable timer interrupts which can be generated by the two CIA chips
        sta $dd0d  ;the kernal uses such an interrupt to flash the cursor and scan the keyboard, so we better
                   ;stop it.

        lda $dc0d  ;by reading this two registers we negate any pending CIA irqs.
        lda $dd0d  ;if we don't do this, a pending CIA irq might occur after we finish setting up our irq.
                   ;we don't want that to happen.

        lda #$01   ;this is how to tell the VICII to generate a raster interrupt
        sta $d01a

        lda #$80   ;this is how to tell at which rasterline we want the irq to be triggered
        sta $d012

        lda #$1b   ;as there are more than 256 rasterlines, the topmost bit of $d011 serves as
        sta $d011  ;the 8th bit for the rasterline we want our irq to be triggered.
                   ;here we simply set up a character screen, leaving the topmost bit 0.

        ;lda #$37   ;we turn off the BASIC here
        ;sta $01    ;the cpu now sees RAM everywhere except at $d000-$e000, where still the registers of
        ;           ;SID/VICII/etc are visible
        lda #$35   ;we turn off the BASIC and KERNAL rom here
        sta $01    ;the cpu now sees RAM everywhere except at $d000-$e000, where still the registers of
                   ;SID/VICII/etc are visible

        lda #<irq  ;this is how we set up
        sta $fffe  ;the address of our interrupt code
        lda #>irq
        sta $ffff

        lda $dc0d  ;by reading this two registers we negate any pending CIA irqs.
        lda $dd0d  ;if we don't do this, a pending CIA irq might occur after we finish setting up our irq.
                   ;we don't want that to happen.


        cli        ;enable maskable interrupts again 
        
        rts
        
irq


        pha        ;store register A in stack
        txa
        pha        ;store register X in stack
        tya
        pha        ;store register Y in stack


        sec
        rol $d019



        ;lda #$ff   ;this is the orthodox and safe way of clearing the interrupt condition of the VICII.
        ;sta $d019

        ;do stuff
        
        ;inc $d020   ; test operation to tweak screen
call_irq_here
        jsr irq_row0


        ;this is how to tell at which rasterline we want the irq to be triggered
        lda $d012
        clc
        adc #20
        lda #255    ; override to exec irq once per frame
        sta $d012


        pla
        tay        ;restore register Y from stack (remember stack is FIFO: First In First Out)
        pla
        tax        ;restore register X from stack
        pla        ;restore register A from stack

        rti       


irq_row0
        ; do stuff
        inc $d021

        ; setup next row
        lda #<irq_row1
        sta call_irq_here+1
        lda #>irq_row1
        sta call_irq_here+2
        rts

irq_row1
        ; do stuff
        inc $d020

        ; setup next row
        lda #<irq_row0
        sta call_irq_here+1
        lda #>irq_row0
        sta call_irq_here+2
        rts

